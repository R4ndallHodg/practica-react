{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","console","log","GiffExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,mCACE,sBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAMd,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBlB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,e,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,4CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCFEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAChB,GAAD,OACrBc,EAAS,CACPf,KAAMC,EACNY,SAAS,SAGZ,CAACpB,IAEGqB,EDbyBI,CAAazB,GAA/BQ,EAAd,EAAQD,KAAYa,EAApB,EAAoBA,QAKpB,OAHAM,QAAQC,IAAInB,GACZkB,QAAQC,IAAIP,GAGV,sBAAKJ,UAAU,aAAf,UACE,6BAAKhB,IACJoB,GAAW,wCACXZ,EAAKC,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,WEXjBiB,EAAgB,WAC3B,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,sBAAK+B,UAAU,iBAAf,UACE,8CACA,cAAC,EAAD,CAAa/B,cAAeA,IAC5B,uBAEA,6BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCPxB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a60d1094.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 1) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=IoO7V5w96chcjTFo1eyZp7E3RKsUvvdB`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__slideDown\">\r\n      <img src={url} alt={title}></img>\r\n      <p> {title}</p>\r\n    </div>\r\n  );\r\n};\r\n","// import React, { useEffect, useState } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n  console.log(gifs);\r\n  console.log(loading);\r\n\r\n  return (\r\n    <div className=\"card-grid \">\r\n      <h3>{category}</h3>\r\n      {loading && <p>loading</p>}\r\n      {gifs.map((gif) => (\r\n        <GifGridItem key={gif.id} {...gif} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) =>\r\n      setState({\r\n        data: gifs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GiffExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Hololive\"]);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiffExpertApp } from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\n// ApiKey = 'IoO7V5w96chcjTFo1eyZp7E3RKsUvvdB'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GiffExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}